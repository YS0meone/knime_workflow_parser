---
CSV Reader:
  operator_specs:
    operatorType: CSVFileScan
    inputPorts: []
    outputPorts:
    - portID: output-0
      displayName: ''
      allowMultiInputs: false
      isDynamicPort: false
    showAdvanced: false
    isDisabled: false
    dynamicInputPorts: false
    dynamicOutputPorts: false
  property_mapping:
    fileEncoding:
      nodes:
        encoding: /.../charset
      action: |
        if $encoding in ["UTF-8", "UTF-16", "US-ASCII"]:
            ret = $encoding.replace("-","_")
        else:
            ret = "UTF_8"
    customDelimiter:
      nodes:
        delimiter: /.../column_delimiter
      action: ret = $delimiter
    hasHeader:
      nodes:
        has_header: /.../has_column_header
      action: |
        ret = True if $has_header == "true" else False
    fileName:
      nodes:
        file_name: /model/settings/file_selection/path/path
      action: ret = $file_name
    limit:
      nodes:
        limit_enabled: /.../limit_data_rows
        max_rows: /.../max_rows
      action: |
        if $limit_enabled == "true":
            ret = int($max_rows)
        else:
            ret = None
    offset:
      nodes:
        offset_enabled: /.../skip_data_rows
        num_rows: /.../number_of_rows_to_skip
      action: |
        if $offset_enabled == "true":
            ret = int($num_rows)
        else:
            ret = None
Row Aggregator:
  operator_specs:
    operatorType: Aggregate
    inputPorts:
    - portID: input-0
      displayName: ''
      allowMultiInputs: false
      isDynamicPort: false
    outputPorts:
    - portID: output-0
      displayName: ''
      allowMultiInputs: false
      isDynamicPort: false
    showAdvanced: false
    isDisabled: false
    dynamicInputPorts: false
    dynamicOutputPorts: false
  property_mapping:
    aggregations:
      nodes:
        - aggFunction: /.../aggregationMethod
          result_attribute: /.../aggregationMethod
          attribute: /model/frequencyColumns/selected_Internals/0
      action: |
        ret = []
        for i in range(0, len($nodes)):
            group = {}
            group["aggFunction"] = $nodes[i]["aggFunction"].lower()
            group["result attribute"] = $nodes[i]["result_attribute"]
            group["attribute"] = $nodes[i]["attribute"]
            ret.append(group)
    groupByKeys:
      nodes:
        - key: /model/categoryColumn
      action: |
        ret = []
        for i in range(len($nodes)):
            ret.append($nodes[i]["key"])
Dummy:
  operator_specs:
    operatorType: Dummy
    inputPorts:
    - portID: input-0
      displayName: ''
      allowMultiInputs: true
      isDynamicPort: false
    - portID: input-1
      displayName: ''
      allowMultiInputs: false
      isDynamicPort: true
    - portID: input-2
      displayName: ''
      allowMultiInputs: false
      isDynamicPort: true
    outputPorts:
    - portID: output-0
      displayName: ''
      allowMultiInputs: false
      isDynamicPort: false
    - portID: output-1
      displayName: ''
      isDynamicPort: true
    - portID: output-2
      displayName: ''
      isDynamicPort: true
    showAdvanced: false
    isDisabled: false
    dynamicInputPorts: true
    dynamicOutputPorts: true
  property_mapping: {}
